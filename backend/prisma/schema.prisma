// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String           @id @default(uuid())
  email            String           @unique
  username         String           @unique
  passwordHash     String           // Changed from password to passwordHash
  firstName        String?
  lastName         String?
  name             String?
  resetToken       String?
  resetTokenExpiry DateTime?
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  teamMembers      TeamMember[]
  ownedTeams       Team[]          @relation("TeamOwner")
  captures         TerritoryCapture[] @relation("CapturedBy")

  @@index([email])
  @@index([username])
}

model Team {
  id          String    @id @default(uuid())
  name        String    @unique
  description String
  ownerId     String
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  owner       User      @relation("TeamOwner", fields: [ownerId], references: [id])
  members     TeamMember[]
  captures    TerritoryCapture[]

  @@index([ownerId])
  @@index([isActive])
}

model TeamMember {
  id        String   @id @default(uuid())
  teamId    String
  userId    String
  role      String   @default("MEMBER")
  joinedAt  DateTime @default(now())
  team      Team     @relation(fields: [teamId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@unique([teamId, userId])
  @@index([teamId])
  @@index([userId])
}

model Territory {
  id          String    @id @default(uuid())
  name        String
  boundary    Json      // PostGIS geometry
  centerPoint Json      // PostGIS point
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  captures    TerritoryCapture[]

  @@index([boundary])
  @@index([centerPoint])
}

model TerritoryCapture {
  id                String    @id @default(uuid())
  territoryId       String
  teamId           String
  capturedByUserId String
  isActive         Boolean   @default(true)
  capturedAt       DateTime  @default(now())
  lostAt           DateTime?
  pointsEarned     Int       @default(0)
  captureMethod    String    @default("manual")
  fortificationLevel Int      @default(1)  @map("fortification_level")
  lastFortificationTime DateTime?
  territory        Territory @relation(fields: [territoryId], references: [id])
  team            Team      @relation(fields: [teamId], references: [id])
  capturedBy      User      @relation("CapturedBy", fields: [capturedByUserId], references: [id])

  @@index([territoryId])
  @@index([teamId])
  @@index([isActive])
}
